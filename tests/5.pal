{
    5.pal
    Tests scoping resulting in invalid procedure calls, variable declarations, and array assignments.
    Errors:
    18:5 str is already defined as a type
    49:9 illegal string assignment (upper bound not the same)
    62:1 unrecognized function or procedure call (defined in a different scope)
}
program scopingFun(input, output);

const TRUEINT = 0;
      FALSEINT = 1;

type str = array[1..12] of char;
     revBoolean = (revTrue, revFalse);

var bob, joe : str;
    str : array [1..10] of char; { $ERR_DATA$ [5, "str is already defined as a type", ["str already used in this level"]] $ERR_DATA$ }
    truthiness : integer;

function aFunction(question : boolean) : integer;
    const doesWork = revTrue; // Legal.

    procedure onlyHere();
    begin
        if doesWork = revFalse then
            bob := joe
    end;
begin
    if question then
    begin
        bob := 'question is ';
        aFunction := TRUEINT;
    end
    else
    begin
        joe := 'the question';
        onlyHere();
        aFunction := FALSEINT;
    end;
end;

procedure redefineStuff(aChar : char);
    type str = array[1..11] of char; // This str is one character shorter!
    
    var tim : str;
    
begin
    tim := joe; { $ERR_DATA$ [9, "illegal string assignment (upper bound not the same)", ["illegal string assignment to string with different upper bound"]] $ERR_DATA$ }
    bob[FALSEINT] := aChar;
end;

begin

bob := 'is large eno';
joe := 'another stri';

writeln(bob, ' and ', joe);

truthiness := aFunction(bob = joe);

onlyHere(); { $ERR_DATA$ [1, "unrecognized function or procedure call (defined in a different scope)", ["no function or procedure named onlyHere in this scope"]] $ERR_DATA$ }

writeln(bob, ' or ', joe);

end.
