{
    0.pal
    Tests arguments to var parameters and legal and illegal name hiding in procedure declarations.
    Errors:
    36:19 times already defined in the scope
    59:18 var parameter is not a variable
    60:20 var parameter not compatible
}

program Parameters(input, output);

var rnum0 : real;
    inum1 : integer;

procedure realToInt(var re : real);
    begin
        re := round(re);
    end;

function realToIntFunc(re : real) : integer;
    begin
        realToIntFunc := round(re);
    end;
    
function intToReal(int : integer) : real;
    begin
        intToReal := int * (-1.0);
    end;

procedure nested(nested : integer); // legal
    type times = (morning, afternoon, night);

    var notNested : integer;
    
    procedure nestedAgain(aTime : times);
        type times = (early, ontime, late); { $ERR_DATA$ [19, "times already defined in the scope", ["symbol 'times' already defined in this scope"]] $ERR_DATA$ }
        
        begin
            if aTime = early then
                inum1 := 0
            else if aTime = ontime then
                inum1 := 1
            else
                inum1 := 2
        end;
        
    begin
        nested := 2 * nested;
        notNested := nested * (-1);
        nestedAgain(afternoon);
    end;
    
    
begin
    rnum0 := 2.0;
    inum1 := 2;
    
    realToInt(rnum0);
    realToInt(2.0); { $ERR_DATA$ [18, "var parameter is not a variable", ["var argument", "not a variable"]] $ERR_DATA$ }
    realToInt(inum1); { $ERR_DATA$ [20, "var parameter not compatible", ["var argument", "not compatible"]] $ERR_DATA$ }
    
    rnum0 := intToReal(realToIntFunc(rnum0));
end.
