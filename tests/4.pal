{
    4.pal
    Tests invalid function and procedure calls and definitions.
    Errors:
    24:0 missing function return value assignment
    32:16 first parameter has incorrect type
    35:22 second parameter missing
}
program correctnessIdentifier(i,o);

var x, y : integer;

function correct(test : integer; var change : integer): boolean;
    begin
        correct := (test = change); // are they equal?
        if not correct then
            change := test // now they are!
    end;

function incorrect(test : integer; var change : integer): boolean;
    begin
        if (test = change) then // are they equal?
            begin
            change := -1 * test; // now they aren't!
            incorrect := false
            end
        else
            incorrect := true;
    end;

procedure displayCorrectness(num1 : integer; var num2 : integer);
    var dcnum : integer;
    
    begin
        dcnum := num1;

        if correct(dcnum, num2) then
            writeln(num1, ' == ', num2);
        
        if incorrect(dcnum, num2) then
            writeln(num1, ' != ', num2);
    end;

begin

    read(x, y);

    while (x <> 0) and (y <> 0) do
    begin
        displayCorrectness(x, y);
        read(x, y);
    end;
        
end.
