{
    4.pal
    Tests invalid function and procedure calls and definitions.
    Errors:
    24:0 missing function return value assignment
    32:16 first parameter has incorrect type
    35:22 second parameter missing
}
program funcsAndProcs(i,o);

var x, y : integer;

function correct(test : integer; var change : integer): boolean;
begin
    correct := (test = change); // are they equal?
    if not correct then
        change := test // now they are!
end;

function incorrect(test : integer; var change : integer): boolean;
begin
    if (test = change) then // are they equal?
        change := -1 * test // now they aren't!
end; { $ERR_DATA$ [0, "missing function return value assignment", ["missing function return value assignment"]] $ERR_DATA$ }

procedure displayCorrectness(num1 : integer; var num2 : integer);
    var correctness : boolean; // Just hanging out ...
        badNum : real;
begin
    badNum := num1;

    if correct(badNum, num2) then { $ERR_DATA$ [16, "first parameter has incorrect type", ["type of badNum does not match type of parameter 1 of function correct"]] $ERR_DATA$ }
        writeln(num1, ' == ', num2);
    
    if incorrect(num1) then { $ERR_DATA$ [22, "second parameter missing", ["missing second parameter of function correct"]] $ERR_DATA$ }
        writeln(num1, ' != ', num2);
end;

begin

read(x, y);

while (x <> 0) and (y <> 0) do
begin
    displayCorrectness(x, y);
    read(x, y);
end;
    
end.
